# migrations/versions/0bd64ed3f23f_add_post_and_comment_models_for_blog.py
"""Add Post and Comment models for blog

Revision ID: 0bd64ed3f23f
Revises: 073de63968b7
Create Date: 2025-05-09 21:28:11.065579

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0bd64ed3f23f'
down_revision = '073de63968b7' # ID de la migration précédente (celle pour is_daily)
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=250), nullable=False),
    sa.Column('slug', sa.String(length=250), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('image_filename', sa.String(length=256), nullable=True),
    # Ajout server_default pour les booléens NOT NULL
    sa.Column('allow_comments', sa.Boolean(), nullable=False, server_default=sa.true()),
    sa.Column('is_published', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # Utilisation de batch_alter_table pour les index si SQLite est utilisé
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_post_is_published'), ['is_published'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('ix_post_timestamp'), ['timestamp'], unique=False)

    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    # Ajout server_default pour les booléens NOT NULL
    sa.Column('is_approved', sa.Boolean(), nullable=False, server_default=sa.true()),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comment_timestamp'), ['timestamp'], unique=False)

    # La modification pour 'banner' est conservée car générée par Alembic
    # Cela suppose que votre modèle Banner avait bien un champ 'clicks' à un moment donné
    # ou que vous l'avez ajouté et que la migration précédente ne l'a pas pris.
    # Si 'clicks' n'est pas dans votre modèle Banner actuel, cette ligne pourrait être superflue
    # mais ne devrait pas causer d'erreur si la colonne n'existe pas déjà.
    # Pour être sûr, on peut vérifier si la colonne existe avant de l'ajouter (plus complexe)
    # ou simplement la laisser, Alembic gère souvent bien ces cas.
    # Si la colonne clicks a été ajoutée par une migration précédente, cette ligne sera ignorée.
    # Si elle n'existe pas et que vous ne la voulez pas, commentez/supprimez la ligne ci-dessous.
    with op.batch_alter_table('banner', schema=None) as batch_op:
        batch_op.add_column(sa.Column('clicks', sa.Integer(), nullable=True, server_default='0')) # Ajout server_default pour int
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('banner', schema=None) as batch_op:
        batch_op.drop_column('clicks')

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comment_timestamp'))
    op.drop_table('comment')

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_timestamp'))
        batch_op.drop_index(batch_op.f('ix_post_slug'))
        batch_op.drop_index(batch_op.f('ix_post_is_published'))
    op.drop_table('post')
    # ### end Alembic commands ###