"""Rebuild initial schema for all current models

Revision ID: 8753f09510d5
Revises: 
Create Date: 2025-05-14 21:57:58.751915

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8753f09510d5'  # <<< REMPLACEZ PAR L'ID GÉNÉRÉ
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=150), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone_number', sa.String(length=30), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('device', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('last_seen', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('balance', sa.Float(), nullable=True, server_default=sa.text('0.0')),
    sa.Column('referral_code', sa.String(length=16), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.Column('is_super_admin', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.Column('last_withdrawal_date', sa.DateTime(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.Column('referred_by_id', sa.Integer(), nullable=True),
    sa.Column('completed_task_count', sa.Integer(), nullable=False, server_default=sa.text('0')),
    sa.Column('telegram_username', sa.String(length=100), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.ForeignKeyConstraint(['referred_by_id'], ['user.id'], name=op.f('fk_user_referred_by_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('referral_code', name=op.f('uq_user_referral_code'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_full_name'), ['full_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_is_verified'), ['is_verified'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_telegram_username'), ['telegram_username'], unique=False)

    op.create_table('banner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_filename', sa.String(length=256), nullable=False),
    sa.Column('destination_url', sa.String(length=500), nullable=True),
    sa.Column('display_location', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('clicks', sa.Integer(), nullable=True, server_default=sa.text('0')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_banner'))
    )
    with op.batch_alter_table('banner', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_banner_is_active'), ['is_active'], unique=False)

    op.create_table('custom_script',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('script_code', sa.Text(), nullable=False),
    sa.Column('location', sa.String(length=10), nullable=False),
    sa.Column('excluded_endpoints', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.Column('last_updated', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.PrimaryKeyConstraint('id', name=op.f('pk_custom_script')),
    sa.UniqueConstraint('name', name=op.f('uq_custom_script_name'))
    )
    with op.batch_alter_table('custom_script', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_custom_script_is_active'), ['is_active'], unique=False)

    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('task_link', sa.String(length=500), nullable=True),
    sa.Column('reward_amount', sa.Float(), nullable=False, server_default=sa.text('0.0')),
    sa.Column('target_countries', sa.Text(), nullable=True),
    sa.Column('target_devices', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.true()), # Modifié nullable et server_default
    sa.Column('creation_date', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('image_filename', sa.String(length=256), nullable=True),
    sa.Column('is_daily', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task'))
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=250), nullable=False),
    sa.Column('slug', sa.String(length=250), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('image_filename', sa.String(length=256), nullable=True),
    sa.Column('allow_comments', sa.Boolean(), nullable=False, server_default=sa.true()),
    sa.Column('is_published', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_post_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post'))
    )
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_post_is_published'), ['is_published'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('ix_post_timestamp'), ['timestamp'], unique=False)

    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('payload_json', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('is_read', sa.Boolean(), nullable=False, server_default=sa.false()), # Modifié nullable et server_default
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_notification_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notification'))
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_timestamp'), ['timestamp'], unique=False)

    op.create_table('withdrawal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('request_timestamp', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('processed_timestamp', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False, server_default='Pending'), # Modifié nullable et server_default
    sa.Column('processed_by_admin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['processed_by_admin_id'], ['user.id'], name=op.f('fk_withdrawal_processed_by_admin_id_user')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_withdrawal_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_withdrawal'))
    )
    op.create_table('external_task_completion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('referrer_user_id', sa.Integer(), nullable=True),
    sa.Column('submitter_identifier', sa.String(length=120), nullable=True),
    sa.Column('submitted_proof', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False, server_default='Pending'), # Modifié nullable et server_default
    sa.Column('submission_timestamp', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('processed_timestamp', sa.DateTime(), nullable=True),
    sa.Column('processed_by_admin_id', sa.Integer(), nullable=True),
    sa.Column('screenshot_filename', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['processed_by_admin_id'], ['user.id'], name=op.f('fk_external_task_completion_processed_by_admin_id_user')),
    sa.ForeignKeyConstraint(['referrer_user_id'], ['user.id'], name=op.f('fk_external_task_completion_referrer_user_id_user')),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_external_task_completion_task_id_task')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_external_task_completion'))
    )
    op.create_table('user_task_completion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('completion_timestamp', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_user_task_completion_task_id_task')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_task_completion_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_task_completion'))
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False, server_default=sa.true()),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['comment.id'], name=op.f('fk_comment_parent_id_comment')),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name=op.f('fk_comment_post_id_post')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_comment_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comment'))
    )
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comment_timestamp'), ['timestamp'], unique=False)

    op.create_table('referral_commission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('referrer_id', sa.Integer(), nullable=False),
    sa.Column('referred_user_id', sa.Integer(), nullable=False),
    sa.Column('originating_completion_id', sa.Integer(), nullable=False),
    sa.Column('commission_amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False, server_default='Pending'),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True, server_default=sa.func.now()), # Ajout server_default
    sa.Column('processed_timestamp', sa.DateTime(), nullable=True),
    sa.Column('processed_by_admin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['originating_completion_id'], ['user_task_completion.id'], name=op.f('fk_referral_commission_originating_completion_id_user_task_completion')),
    sa.ForeignKeyConstraint(['processed_by_admin_id'], ['user.id'], name=op.f('fk_referral_commission_processed_by_admin_id_user')),
    sa.ForeignKeyConstraint(['referred_user_id'], ['user.id'], name=op.f('fk_referral_commission_referred_user_id_user')),
    sa.ForeignKeyConstraint(['referrer_id'], ['user.id'], name=op.f('fk_referral_commission_referrer_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_referral_commission')),
    sa.UniqueConstraint('originating_completion_id', name=op.f('uq_referral_commission_originating_completion_id'))
    )
    with op.batch_alter_table('referral_commission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_referral_commission_creation_timestamp'), ['creation_timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_referral_commission_referred_user_id'), ['referred_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_referral_commission_referrer_id'), ['referrer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_referral_commission_status'), ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('referral_commission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_referral_commission_status'))
        batch_op.drop_index(batch_op.f('ix_referral_commission_referrer_id'))
        batch_op.drop_index(batch_op.f('ix_referral_commission_referred_user_id'))
        batch_op.drop_index(batch_op.f('ix_referral_commission_creation_timestamp'))
    op.drop_table('referral_commission')

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comment_timestamp'))
    op.drop_table('comment')

    op.drop_table('user_task_completion')
    op.drop_table('external_task_completion')
    op.drop_table('withdrawal')

    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_timestamp'))
        batch_op.drop_index(batch_op.f('ix_notification_name'))
    op.drop_table('notification')

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_timestamp'))
        batch_op.drop_index(batch_op.f('ix_post_slug'))
        batch_op.drop_index(batch_op.f('ix_post_is_published'))
    op.drop_table('post')
    op.drop_table('task')

    with op.batch_alter_table('custom_script', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_custom_script_is_active'))
    op.drop_table('custom_script')

    with op.batch_alter_table('banner', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_banner_is_active'))
    op.drop_table('banner')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_telegram_username'))
        batch_op.drop_index(batch_op.f('ix_user_is_verified'))
        batch_op.drop_index(batch_op.f('ix_user_full_name'))
        batch_op.drop_index(batch_op.f('ix_user_email'))
    op.drop_table('user')
    # ### end Alembic commands ###
